Data Scientist Role Play: Profiling and Analyzing the Yelp Dataset Coursera Worksheet

This is a 2-part assignment. In the first part, you are asked a series of questions that will help you profile and understand the data just like a data scientist would. For this first part of the assignment, you will be assessed both on the correctness of your findings, as well as the code you used to arrive at your answer. You will be graded on how easy your code is to read, so remember to use proper formatting and comments where necessary.

In the second part of the assignment, you are asked to come up with your own inferences and analysis of the data for a particular research question you want to answer. You will be required to prepare the dataset for the analysis you choose to do. As with the first part, you will be graded, in part, on how easy your code is to read, so use proper formatting and comments to illustrate and communicate your intent as required.

For both parts of this assignment, use this "worksheet." It provides all the questions you are being asked, and your job will be to transfer your answers and SQL coding where indicated into this worksheet so that your peers can review your work. You should be able to use any Text Editor (Windows Notepad, Apple TextEdit, Notepad ++, Sublime Text, etc.) to copy and paste your answers. If you are going to use Word or some other page layout application, just be careful to make sure your answers and code are lined appropriately.
In this case, you may want to save as a PDF to ensure your formatting remains intact for you reviewer.



Part 1: Yelp Dataset Profiling and Understanding

1. Profile the data by finding the total number of records for each of the tables below:
SELECT COUNT(*)
FROM 'Table_Name'


i. Attribute table = 10000
ii. Business table = 10000
iii. Category table = 10000
iv. Checkin table = 10000
v. elite_years table = 10000
vi. friend table =  10000
vii. hours table = 10000
viii. photo table = 10000
ix. review table = 10000
x. tip table = 10000
xi. user table = 10000
	


2. Find the total distinct records by either the foreign key or primary key for each table. If two foreign keys are listed in the table, please specify which foreign key.
SELECT COUNT(DISTINCT(Key))
FROM 'Table_Name'


i. Business = id: 10000
ii. Hours = business_id: 1562
iii. Category = business_id: 2643
iv. Attribute = business_id: 1115
v. Review = id: 10000, user_id: 9581, business_id: 8090
vi. Checkin = business_id: 493
vii. Photo = id: 10000, business_id: 6493
viii. Tip = user_id: 537, business_id: 3979
ix. User = id: 10000
x. Friend =  user_id: 11
xi. Elite_years = user_id: 2780

--Primary Keys are identified as an actual 'Key Emblem' in the Entity Relationship Diagram.

--Foreign Keys are identified as a "Red Diamond Emblem" in the Entity Relationship Diagram to identify similarities amongst
the tables.
	



3. Are there any columns with null values in the Users table? Indicate "yes," or "no."

	Answer: No
	
	
	SQL code used to arrive at answer: 
    SELECT COUNT(*)
    FROM User
    WHERE id = NULL OR 
            name = NULL OR
            review_count = NULL OR
            yelping_since = NULL OR
            useful = NULL OR
            funny = NULL OR
            cool = NULL OR
            fans = NULL OR
            average_stars = NULL OR
            compliment_more = NULL OR
            compliment_profile = NULL OR
            compliment_cute = NULL OR
            compliment_list = NULL OR
            compliment_note = NULL OR
            compliment_plain = NULL OR
            compliment_cool = NULL OR
            compliment_funny = NULL OR
            compliment_writer = NULL OR
            compliment_photos = NULL
                                
	
	

	
4. For each table and column listed below, display the smallest (minimum), largest (maximum), and average (mean) value for the following fields:

	i. Table: Review, Column: Stars
    SELECT MIN/MAX/AVG(Stars)
    FROM Review
    
	
		min: 1		max: 5		avg: 3.7082
		
	
	ii. Table: Business, Column: Stars
    SELECT MIN/MAX/AVG(Stars)
    FROM Business
	
		min: 1		max: 5		avg: 3.6549
		
	
	iii. Table: Tip, Column: Likes
    SELECT MIN/MAX/AVG(Likes)
    FROM Tip
	
		min: 0		max: 2		avg: 0.0144
		
	
	iv. Table: Checkin, Column: Count
	SELECT MIN/MAX/AVG(Count)
    FROM Checkin

		min: 1		max: 53		avg: 1.9414
		
	
	v. Table: User, Column: Review_count
    SELECT MIN/MAX/AVG(Review_count)
    FROM User
	
		min: 0		max: 2000		avg: 24.2995
		


5. List the cities with the most reviews in descending order:

	SQL code used to arrive at answer:
    
    SELECT City, SUM(Review_count) as Reviews
    FROM Business
    GROUP BY City
    ORDER BY reviews DESC;
	
	
	Copy and Paste the Result Below:
    +-----------------+---------+
	| City            | Reviews |
	+-----------------+---------+
	| Las Vegas       |   82854 |
	| Phoenix         |   34503 |
	| Toronto         |   24113 |
	| Scottsdale      |   20614 |
	| Charlotte       |   12523 |
	| Henderson       |   10871 |
	| Tempe           |   10504 |
	| Pittsburgh      |    9798 |
	| MontrÃ©al       |    9448 |
	| Chandler        |    8112 |
	| Mesa            |    6875 |
	| Gilbert         |    6380 |
	| Cleveland       |    5593 |
	| Madison         |    5265 |
	| Glendale        |    4406 |
	| Mississauga     |    3814 |
	| Edinburgh       |    2792 |
	| Peoria          |    2624 |
	| North Las Vegas |    2438 |
	| Markham         |    2352 |
	| Champaign       |    2029 |
	| Stuttgart       |    1849 |
	| Surprise        |    1520 |
	| Lakewood        |    1465 |
	| Goodyear        |    1155 |
	+-----------------+---------+
	

	
6. Find the distribution of star ratings to the business in the following cities:

i. Avon

SQL code used to arrive at answer:

SELECT Stars, COUNT(stars) as StarsCount
FROM Business
WHERE City = 'Avon'
GROUP BY Stars


Copy and Paste the Resulting Table Below (2 columns â€“ star rating and count):
    +-------+------------+
	| Stars | StarsCount |
	+-------+------------+
	|   1.5 |     1      |
	|   2.5 |     2      |
	|   3.5 |     3      |
	|   4.0 |     2      |
	|   4.5 |     1      |
	|   5.0 |     1      |
	+-------+------------+


ii. Beachwood

SQL code used to arrive at answer:

SELECT Stars, COUNT(stars) as StarsCount
FROM Business
WHERE City = 'Beachwood'
GROUP BY Stars


Copy and Paste the Resulting Table Below (2 columns â€“ star rating and count):
	+-------+------------+
	| Stars | StarsCount |
	+-------+------------+
	|   2.0 |     1      |
	|   2.5 |     1      |
	|   3.0 |     2      |
	|   3.5 |     2      |
	|   4.0 |     1      |
	|   4.5 |     2      |
	|   5.0 |     5      |
	+-------+------------+	
		


7. Find the top 3 users based on their total number of reviews:
		
	SQL code used to arrive at answer:
    
    SELECT Name, id, Review_count
    FROM User
    ORDER BY Review_count DESC
    LIMIT 3;
	
		
	Copy and Paste the Result Below:
    +-----------+------------------------+-----------+
	| Name   | id                     | Review_count |
	+--------+------------------------+--------------+
	| Gerald | -G7Zkl1wIWBBmD0KRy_sCw |         2000 |
	| Sara   | -3s52C4zL_DHRK0ULG6qtg |         1629 |
	| Yuri   | -8lbUNlXVSoXqaRRiHiSNg |         1339 |
	+--------+------------------------+--------------+
		


8. Does posing more reviews correlate with more fans?

	Please explain your findings and interpretation of the results:

	According to my findings, posing more reviews does not correlate with more fans because reviews can vary from
	positive and negative.
	
	SQL code used to arrive at answer:

	SELECT Name, id, Fans, Review_count
	FROM User
	WHERE Review_count > 1000
	ORDER BY Fans DESC;

	+---------+------------------------+------+--------------+
	| Name    | id                     | Fans | Review_count |
	+---------+------------------------+------+--------------+
	| Harald  | --2vR0DIsmQ6WfcSzKWigw |  311 |         1153 |
	| Gerald  | -G7Zkl1wIWBBmD0KRy_sCw |  253 |         2000 |
	| William | -FZBTkAZEXoP7CYvRV2ZwQ |  126 |         1215 |
	| Roanna  | -DFCC64NXgqrxlO8aLU5rg |  104 |         1039 |
	| .Hon    | -K2Tcgh2EKX6e6HqqIrBIQ |  101 |         1246 |
	| Yuri    | -8lbUNlXVSoXqaRRiHiSNg |   76 |         1339 |
	| Sara    | -3s52C4zL_DHRK0ULG6qtg |   50 |         1629 |
	| eric    | -gokwePdbXjfS0iF7NsUGA |   16 |         1116 |
	+---------+------------------------+------+--------------+
	

	
9. Are there more reviews with the word "love" or with the word "hate" in them?

	Answer: 'Love'= 1780 Reviews  
			'Hate'= 232 Reviews
		Love > Hate

	
	SQL code used to arrive at answer:
	
	SELECT Count(Text)
	FROM Review
	WHERE Text LIKE '%love%'

	SELECT Count(Text)
	FROM Review
	where Text LIKE '%hate%'

	
	
10. Find the top 10 users with the most fans:

	SQL code used to arrive at answer:
	
	SELECT Name, id, Fans
	FROM User
	ORDER BY Fans DESC
	LIMIT 10;
	
	
	Copy and Paste the Result Below:

	
	+-----------+------------------------+------+
	| Name      | id                     | Fans |
	+-----------+------------------------+------+
	| Amy       | -9I98YbNQnLdAmcYfb324Q |  503 |
	| Mimi      | -8EnCioUmDygAbsYZmTeRQ |  497 |
	| Harald    | --2vR0DIsmQ6WfcSzKWigw |  311 |
	| Gerald    | -G7Zkl1wIWBBmD0KRy_sCw |  253 |
	| Christine | -0IiMAZI2SsQ7VmyzJjokQ |  173 |
	| Lisa      | -g3XIcCb2b-BD0QBCcq2Sw |  159 |
	| Cat       | -9bbDysuiWeo2VShFJJtcw |  133 |
	| William   | -FZBTkAZEXoP7CYvRV2ZwQ |  126 |
	| Fran      | -9da1xk7zgnnfO1uTVYGkA |  124 |
	| Lissa     | -lh59ko3dxChBSZ9U7LfUw |  120 |
	+-----------+------------------------+------+

	
		

Part 2: Inferences and Analysis

1. Pick one city and category of your choice and group the businesses in that city or category by their overall star rating. Compare the businesses with 2-3 stars to the businesses with 4-5 stars and answer the following questions. Include your code.
	
i. Do the two groups you chose to analyze have a different distribution of hours?
Yes, they have different distribution of hours according to the given data.

ii. Do the two groups you chose to analyze have a different number of reviews?
Yes, there are more 4 to 5 star reviews within a short timespan.         
         
iii. Are you able to infer anything from the location data provided between these two groups? Explain.
Not exactly because all the businesses have different postal codes, given from the location data.
SQL code used for analysis:

SELECT b.Name, b.Review_count, h.Hours, Postal_code,
	CASE
		WHEN Hours LIKE '%monday%' THEN 1
		WHEN Hours LIKE '%tuesday%' THEN 2
		WHEN Hours LIKE '%wednesday%' THEN 3
		WHEN Hours LIKE '%thursday%' THEN 4
		WHEN Hours LIKE '%friday%' THEN 5
		WHEN Hours LIKE '%saturday%' THEN 6
		WHEN Hours LIKE '%sunday%' THEN 7
	END AS Order,
	CASE
		WHEN B.Stars BETWEEN 2 AND 3 THEN '2-3 Stars'
		WHEN B.Stars BETWEEN 4 AND 5 THEN '4-5 Stars'
	END AS Star_rating
FROM business B INNER JOIN hours H 
ON B.id = H.Business_id
INNER JOIN Category C 
ON C.Business_id = B.id 
WHERE (B.city = 'Toronto')
AND (B.Stars BETWEEN 2 AND 3
OR B.Stars BETWEEN 4 AND 5)
GROUP BY Stars, Order
ORDER BY Order, Star_rating ASC;
		
		
2. Group business based on the ones that are open and the ones that are closed. What differences can you find between the ones that are still open and the ones that are closed? List at least two differences and the SQL code you used to arrive at your answer.
		
i. Difference 1:
Total review counts for open businesses are higher than that of businesses that are closed.       
         
ii. Difference 2:
The average amount of reviews is higher than the closed businesses.        
         
         
SQL code used for analysis:
SELECT Is_Open, Count(*), Sum(Review_Count), AVG(Stars)
FROM Business
GROUP BY Is_Open

+---------+----------+-------------------+---------------+
| Is_Open | Count(*) | Sum(Review_Count) |    Avg(Stars) |
+---------+----------+-------------------+---------------+
|       0 |     1520 |             35261 | 3.52039473684 |
|       1 |     8480 |            269300 | 3.67900943396 |
+---------+----------+-------------------+---------------+

	
	
3. For this last part of your analysis, you are going to choose the type of analysis you want to conduct on the Yelp dataset and are going to prepare the data for analysis.

Ideas for analysis include: Parsing out keywords and business attributes for sentiment analysis, clustering businesses to find commonalities or anomalies between them, predicting the overall star rating for a business, predicting the number of fans a user will have, and so on. These are just a few examples to get you started, so feel free to be creative and come up with your own problem you want to solve. Provide answers, in-line, to all of the following:
	
i. Indicate the type of analysis you chose to do:
Analyzing the relationship between cities with review accounts, as well as other features/attributes.
         
         
ii. Write 1-2 brief paragraphs on the type of data you will need for your analysis and why you chose that data:
Judging from the given data, it is considered that Las Vegas is the most reviewed in the city; due to tourists and the fact that Las Vegas is considered to be well-known
amongst the public. Las Vegas has the highest reviews in total, as well as having consistent average star ratings from a giant sample size; which is quite impressive.
I also included the latitude and longitude to specify the distance between the given areas to determine if the restaurants are close-knit with each other or far-apart.
Utilizing the word usage of "useful' and 'cool' are extracted because for people to describe a restaurant to be positive, these specific words are exemplified in reviews.
                           
                  
iii. Output of your finished dataset:
+------------------------+-----------------------------+------------------+-------+----------+-----------+-------+--------------+---------+--------+-------+
| id                     | Name                        | City             | State | Latitude | Longitude | Stars | Review_Count | Is_Open | Useful | Cool  | 
+------------------------+-----------------------------+------------------+-------+----------+-----------+-------+--------------+---------+--------+-------+
| 19umlhmVB9O3njIBfRAe8g | Fiesta Rancho               | Las Vegas        | NV    |  36.2016 |  -115.195 |   2.5 |           80 |       1 |     13 |     9 | 
| --9e1ONYQuAa-CB_Rrw7Tw | Delmonico Steakhouse        | Las Vegas        | NV    |  36.1232 |  -115.169 |   4.0 |         1389 |       1 |     12 |     6 | 
| 2ALnrUa1_U8JHNgscad8OQ | Caramel Bar & Lounge        | Las Vegas        | NV    |    36.13 |   -115.15 |   3.5 |           99 |       0 |     11 |     7 | 
| 1vEBp-YeAvqg1w19GzYg9w | Corky and Lenny's           | Woodmere Village | OH    |  41.4633 |  -81.4878 |   3.5 |          242 |       1 |      9 |     11|  
| 2weQS-RnoOBhb1KsHKyoSQ | The Buffet                  | Las Vegas        | NV    |  36.1269 |  -115.166 |   3.5 |         3873 |       1 |      9 |     6 |  
| 21G3_HqzfBh3gR1Eo-sojg | Dreamy Draw Recreation Area | Phoenix          | AZ    |  33.5604 |  -112.031 |   4.0 |           45 |       1 |      9 |     4 |   
| -wpNQQYtqlmQ9Rcwhgm9iw | Arbor Care Tree Service     | Tempe            | AZ    |   33.377 |  -111.945 |   5.0 |           91 |       1 |      9 |     7 |   
| 0-cJHYQVq1CWgpfHxLoBAQ | Babe's Cabaret              | Scottsdale       | AZ    |  33.4706 |  -111.926 |   3.0 |           16 |       0 |      8 |     3 |  
| 1HWH_BE_wMfX88cRoH-NCQ | Sakawa Cafe                 | Toronto          | ON    |  43.6798 |  -79.3397 |   4.5 |           42 |       1 |      8 |     5 |  
| -DnaKAs2oK3rXfrjSvn9ew | Tokyo Cafe                  | North Las Vegas  | NV    |  36.2396 |  -115.115 |   4.5 |          224 |       1 |      7 |     6 |    
| -WfV03-dVE3HSMUmg0tnvQ | Albertsons                  | Las Vegas        | NV    |  36.1606 |  -115.351 |   3.5 |           40 |       1 |      7 |     3 |   
| 27_N5P9HZ86IviONPT_twg | Woodlot Restaurant          | Toronto          | ON    |  43.6556 |  -79.4099 |   4.0 |          231 |       1 |      7 |     3 |    
| -sN_og_84rLW22CaE3cjVw | Full House BBQ              | Las Vegas        | NV    |  36.0102 |  -115.135 |   4.0 |          264 |       1 |      7 |     5 |   
| 21fssGjxUX1uPCmBOvwo-A | Hendrick Honda              | Charlotte        | NC    |  35.1166 |   -80.882 |   3.0 |           44 |       1 |      7 |     0 |   
| -Za5mjo-CYYUMsd1r8GC7Q | Ashbridges Bay Park         | Toronto          | ON    |  43.6607 |  -79.3097 |   3.5 |           29 |       1 |      6 |     4 |   
| 1L6kxhRScPAzBtEwWFUxAA | Nevada Eye Care West        | Las Vegas        | NV    |   36.219 |  -115.263 |   3.5 |           28 |       1 |      6 |     2 |    
| 1ZnVfS-qP19upP_fwOhZsA | Big Wong Restaurant         | Las Vegas        | NV    |  36.1267 |   -115.21 |   4.0 |          768 |       1 |      6 |     1 |  
| 1WHM7EnTMSjteM9UEr86tA | Showcase Honda              | Phoenix          | AZ    |  33.5086 |  -112.053 |   2.5 |          307 |       1 |      6 |     0 | 
| 34VuBMNaG9nJiyqsnoEgPg | Nori Sushi                  | Phoenix          | AZ    |  33.6762 |  -111.971 |   4.0 |          305 |       1 |      6 |     5 |
| -hsFN8VQvH26M0WZ3k1Wtg | Jockey Club                 | Las Vegas        | NV    |  36.1101 |  -115.175 |   3.0 |          237 |       1 |      6 |     1 |   
| 2S9t90Q0qZWCV7X_u0rxZQ | Kenzo Ramen                 | Toronto          | ON    |  43.6556 |   -79.385 |   3.0 |          210 |       1 |      6 |     1 | 
| 364hhL5st0LV16UcBHRJ3A | Yonaka Modern Japanese      | Las Vegas        | NV    |  36.1149 |   -115.21 |   4.5 |          864 |       1 |      5 |     4 |
| -xC1h0CMZgbW9z8cxwI6pw | Best Buy                    | Tempe            | AZ    |  33.4301 |  -111.903 |   2.0 |           84 |       1 |      5 |     1 | 
| 0lNgC2KZbkIUGve4PJwn3A | Sprouts Farmers Market      | Henderson        | NV    |  36.0569 |  -115.048 |   4.0 |           94 |       1 |      5 |     3 | 
| 1nF8Me63cpxIkFK8Ysx-DA | Shabu Shabu Paradise        | Henderson        | NV    |  36.0119 |  -115.063 |   4.5 |          213 |       1 |      5 |     1 | 
+------------------------+-----------------------------+------------------+-------+----------+-----------+-------+--------------+---------+--------+-------+
         
         
iv. Provide the SQL code you used to create your final dataset:
SELECT B.id, B.Name, B.State, B.Latitude, B.Longitude, B.Stars, B.Review_Count, B.Is_Open, R.Useful, R.Cool
FROM Business B 
INNER JOIN Review R ON B.id = R.Business_id 
ORDER BY R.Useful DESC, R.Cool DESC;